xlab("Year") +
ylab("Number of Cases") +
theme_minimal()
}
plot_count_vs_total(data, "geniss == 1", var_label = "geniss == 1")
plot_count_vs_total(data, "circuit == 4", var_label = "Circuit 4")
library(tidyr)
plot_count_vs_total(data, "geniss == 1", var_label = "geniss == 1")
plot_count_vs_total(data, "circuit == 4", var_label = "Circuit 4")
plot_count_vs_total(data, "geniss == 1", var_label = "geniss == 1")
plot_count_vs_total(data, "geniss == 2", var_label = "geniss == 1")
plot_count_vs_total(data, "geniss == 7", var_label = "geniss == 1")
plot_treatment_trends(data, 'geniss == 1', title_suffix = "- Criminal")
plot_treatment_trends(data, 'geniss == 2', title_suffix = "- Civil Rights")
plot_treatment_trends(data, 'geniss == 7', title_suffix = "- Economic activity and regulation")
plot_count_vs_total(data, "geniss == 1", var_label = "geniss == 1")
plot_count_vs_total(data, "geniss == 7", var_label = "geniss == 1")
plot_multiple_counts_vs_total <- function(df, filter_exprs, var_labels = NULL) {
df$year <- as.numeric(df$year)
if (is.null(var_labels)) {
var_labels <- filter_exprs
}
subset_list <- lapply(seq_along(filter_exprs), function(i) {
expr <- filter_exprs[i]
label <- var_labels[i]
df %>%
filter(!!rlang::parse_expr(expr)) %>%
count(year, name = "count") %>%
mutate(type = label)
})
subset_data <- bind_rows(subset_list)
total_data <- df %>%
count(year, name = "count") %>%
mutate(type = "Total")
combined <- bind_rows(subset_data, total_data)
ggplot(combined, aes(x = year, y = count, color = type)) +
geom_line() +
geom_point() +
ggtitle("Yearly Counts: Subsets vs Total") +
xlab("Year") +
ylab("Number of Cases") +
theme_minimal()
}
plot_multiple_counts_vs_total(
data,
filter_exprs = c("geniss == 1", "circuit == 2"),
var_labels = c("geniss 1", "circuit 2")
)
plot_multiple_counts_vs_total(
data,
filter_exprs = c("geniss == 1", "geniss == 2", "geniss == 7"),
var_labels = c("geniss 1", "geniss 2", "geniss 7")
)
plot_multiple_counts_vs_total(
data,
filter_exprs = c("treat == 1", "treat == 2"),
var_labels = c("treat 1", "treat 2")
)
### Packages----------
# install.packages("here")
# install.packages("ggplot2")
# install.packages("dplyr")
library(here)
library(ggplot2)
library(dplyr)
library(tidyr)
### Initial data ingestion and exploration----------
data_path <- here("cta96.csv")
data <- read.csv(data_path)
print(colnames(data))
duplicate_casenums <- data$casenum[duplicated(data$casenum)]
print(duplicate_casenums)
years <- sort(unique(data$year))
num_years <- length(years)
year_counts <- rep(0,num_years)
for (year in years) {
print(paste(year, sum(data$year == year), sep = ":"))
}
### Exploring overall decision results--------
months <- c(1:12)
for (month in months) {
print(paste(month, sum(data$month == month), sep = ":"))
}
#Coding the various outcomes for the decision of the appellate court
affirmed <- c(1,8)
reversed <- c(2,3,4,7)
indeterminate <- c(0,5,6,9,10)
year_percent_affirmed <- rep(0,num_years)
year_percent_reversed <- rep(0,num_years)
year_percent_indeterminate <- rep(0,num_years)
for (i in seq_along(years)) {
year_percent_affirmed[i] <- nrow(data[data$year == years[i] & data$treat %in% affirmed, ]) / sum(data$year == years[i])
year_percent_reversed[i] <- nrow(data[data$year == years[i] & data$treat %in% reversed, ]) / sum(data$year == years[i])
year_percent_indeterminate[i] <- nrow(data[data$year == years[i] & data$treat %in% indeterminate, ]) / sum(data$year == years[i])
}
grouped_treat_data_long <- data.frame(
years = rep(years, 3),
values = c(year_percent_affirmed, year_percent_reversed, year_percent_indeterminate),
group = rep(c("Affirmed", "Reversed", "Indeterminate"), each = length(years))
)
ggplot(grouped_treat_data_long, aes(x = years, y = values, color = group)) +
geom_point(size = 2) +
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "green", "red")) +
theme_minimal()
### Exploring decision results more granularly-------
individual_treat_data <- data.frame(
years = years,
matrix(ncol = 11, nrow = length(years))
)
colnames(individual_treat_data)[2:12] <- 0:10
for (i in 0:10) {
for (j in seq_along(individual_treat_data$years)) {
year <- individual_treat_data$years[j]
individual_treat_data[j,as.character(i)] <- nrow(data[data$year == year & data$treat == i, ]) / sum(data$year == year)
}
}
individual_treat_data_long <- data.frame(
years = rep(years, 11),
values = unlist(individual_treat_data[,2:12]),
group = rep(c(0:10), each = length(years))
)
filtered_data <- individual_treat_data_long %>%
filter(group == 1 | group == 8)
ggplot(filtered_data, aes(x = years, y = values, color = factor(group))) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "red")) +  # Set custom colors
theme_minimal()
filtered_data <- individual_treat_data_long %>%
filter(group == 2 | group == 3|group == 4|group == 7)
ggplot(filtered_data, aes(x = years, y = values, color = factor(group))) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "red", "green", "purple")) +  # Set custom colors
theme_minimal()
filtered_data <- individual_treat_data_long %>%
filter(group == 5 | group == 6|group == 9|group == 10)
ggplot(filtered_data, aes(x = years, y = values, color = factor(group))) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "red", "green", "purple")) +  # Set custom colors
theme_minimal()
grouped_circuit_treat_data_long <- data.frame(
year = rep(years, each = 3*12),
circuit = rep(c(0:11), length(years)*3),
group = rep(c("Affirmed", "Reversed", "Indeterminate"), each = 12, times = length(years)),
treat_percent = rep(0, 3*12*length(years))
)
data_list <- list(
"Affirmed" = affirmed,
"Reversed" = reversed,
"Indeterminate" = indeterminate
)
# Function to retrieve the vector dynamically
get_vector <- function(key) {
if (key %in% names(data_list)) {
return(data_list[[key]])
} else {
stop("Key not found in the list.")
}
}
for (i in seq_len(nrow(grouped_circuit_treat_data_long))) {
circuit_year_total = nrow(data[data$year == grouped_circuit_treat_data_long$year[i]
& data$circuit == grouped_circuit_treat_data_long$circuit[i], ])
circuit_year_group = nrow(data[data$treat %in% get_vector(grouped_circuit_treat_data_long$group[i])
& data$year == grouped_circuit_treat_data_long$year[i]
& data$circuit == grouped_circuit_treat_data_long$circuit[i], ])
grouped_circuit_treat_data_long$treat_percent[i] <- circuit_year_group / circuit_year_total
}
for (i in 0:11) {
filtered_data <- grouped_circuit_treat_data_long %>%
filter(circuit == i)
p <- ggplot(filtered_data, aes(x = year, y = treat_percent, color = group, shape = factor(circuit))) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "green", "red")) +  # Set custom colors
theme_minimal() +
guides(color = guide_legend(order = 1),  # Ensure color legend comes first
shape = guide_legend(order = 2))
print(p)
}
### Producing weighted analysis of decision patterns--------
weights <- read.csv(here("data_weights.csv"))
new_row <- data.frame(Year=76,Circuit=9,Circuit_Cases=(655+596)/2)
weights <- rbind(weights,new_row)
weights$year <- weights$Year+1900
weights$circuit <- weights$Circuit
weights <- weights %>%
group_by(year) %>%
mutate(year_circuit_cases = sum(Circuit_Cases)) %>%
ungroup()
weights$sample_cases <- apply(weights, 1, function(row) {
nrow(filter(data, year == row["year"], circuit == row["Circuit"]))
})
weights$year_sample_cases <- apply(weights, 1, function(row) {
nrow(filter(data, year == row["year"]))
})
weights$circuit_proportion <- weights$Circuit_Cases/weights$year_circuit_cases
weights$sample_proportion <- weights$sample_cases/weights$year_sample_cases
weights$weighting <- weights$circuit_proportion/weights$sample_proportion
data <- read.csv(data_path)
data <- left_join(data, weights, by=c("year", "circuit"))
weighted_year_percent_affirmed <- rep(0,num_years)
weighted_year_percent_reversed <- rep(0,num_years)
weighted_year_percent_indeterminate <- rep(0,num_years)
data[data$year == 1926 & data$treat %in% affirmed, ]$weighting
sum(data[data$year == 1926 & data$treat %in% affirmed, ]$weighting) / sum(data[data$year == 1926,]$weighting)
for (i in seq_along(years)) {
weighted_year_percent_affirmed[i] <- sum(data[data$year == years[i] & data$treat %in% affirmed, ]$weighting) / sum(data[data$year == years[i],]$weighting)
weighted_year_percent_reversed[i] <- sum(data[data$year == years[i] & data$treat %in% reversed, ]$weighting) / sum(data[data$year == years[i],]$weighting)
weighted_year_percent_indeterminate[i] <- sum(data[data$year == years[i] & data$treat %in% indeterminate, ]$weighting) / sum(data[data$year == years[i],]$weighting)
}
grouped_treat_data_long_weighted <- data.frame(
years = rep(years, 3),
values = c(weighted_year_percent_affirmed, weighted_year_percent_reversed, weighted_year_percent_indeterminate),
group = rep(c("Affirmed", "Reversed", "Indeterminate"), each = length(years))
)
ggplot(grouped_treat_data_long_weighted, aes(x = years, y = values, color = group)) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result - Weighted") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "green", "red")) +  # Set custom colors
theme_minimal()
### Analyzing slices of the data to understand the discontinuity------
six_cir_slice <- data[data$Circuit==6,]
write.csv(six_cir_slice, "Six_circuit_slice.csv", row.names=FALSE)
table(six_cir_slice$origin, six_cir_slice$year)
table(six_cir_slice$source, six_cir_slice$year)
table(six_cir_slice$casetyp1, six_cir_slice$year)
table(six_cir_slice$geniss, six_cir_slice$year)
#Plots the frequency or proportion of one of the variables by year
plot_categorical_by_year <- function(df, varname, year_var = "year", proportion = FALSE, title_prefix = "") {
var_sym <- sym(varname)
year_sym <- sym(year_var)
freq_data <- df %>%
count(!!var_sym, !!year_sym, name = "count") %>%
mutate(
!!year_var := as.numeric(as.character(!!year_sym)),
!!var_sym := as.factor(!!var_sym)
)
if (proportion) {
freq_data <- freq_data %>%
group_by(!!year_sym) %>%
mutate(count = count / sum(count)) %>%
ungroup()
y_label <- "Proportion"
title_type <- "Proportions"
} else {
y_label <- "Frequency"
title_type <- "Frequencies"
}
ggplot(freq_data, aes(x = !!year_sym, y = count, color = !!var_sym, group = !!var_sym)) +
geom_line() +
geom_point() +
scale_color_brewer(palette = "Set1", name = varname) +
ggtitle(paste0(title_prefix, varname, " ", title_type, " by Year")) +
xlab("Year") +
ylab(y_label) +
theme_minimal()
}
### Plotting wide array of variables to see which if any spike or dip around 1970
plot_categorical_by_year(data[data$Circuit==3,], "geniss", proportion = FALSE)
plot_categorical_by_year(data[data$Circuit==3,], "geniss", proportion = TRUE)
plot_categorical_by_year(data[data$Circuit==3,], "source")
plot_categorical_by_year(data[data$Circuit==3,], "casetyp1")
plot_categorical_by_year(data[data$Circuit==3,], "origin")
### Some trends to look at
plot_categorical_by_year(data[data$treat==1,], "geniss", proportion = TRUE)      #Some promise here
plot_categorical_by_year(data[data$treat==1,], "geniss", proportion = FALSE)      #Some promise here
plot_categorical_by_year(data[data$treat==1,], "source", proportion = TRUE)      #Some promise here
plot_categorical_by_year(data[data$treat==1,], "source", proportion = FALSE)      #Some promise here
plot_categorical_by_year(data[data$treat==1,], "casetyp1")
plot_categorical_by_year(data[data$treat==1,], "origin")
plot_categorical_by_year(data, "geniss")
plot_categorical_by_year(data, "source")
plot_categorical_by_year(data, "casetyp1")
plot_categorical_by_year(data, "origin")
#No clear trends below
plot_categorical_by_year(data, "juris")
plot_categorical_by_year(data, "statecl")
plot_categorical_by_year(data, "standing")
plot_categorical_by_year(data, "mootness")
plot_categorical_by_year(data, "exhaust")
plot_categorical_by_year(data, "timely")
plot_categorical_by_year(data, "immunity")
plot_categorical_by_year(data, "frivol")
plot_categorical_by_year(data, "polquest")
plot_categorical_by_year(data, "oththres")
plot_categorical_by_year(data, "frivapp")
plot_categorical_by_year(data, "othappth")
### Using a function to plot the affirm/reverse rate for subsets of the data
#Plotting decision rates by category
plot_treatment_trends <- function(df, filter_expr = NULL, title_suffix = "") {
affirmed <- c(1, 8)
reversed <- c(2, 3, 4, 7)
indeterminate <- c(0, 5, 6, 9, 10)
if (!is.null(filter_expr)) {
df <- df %>% filter(!!rlang::parse_expr(filter_expr))
}
years <- sort(unique(df$year))
num_years <- length(years)
year_percent_affirmed <- sapply(years, function(y) {
sum(df$year == y & df$treat %in% affirmed) / sum(df$year == y)
})
year_percent_reversed <- sapply(years, function(y) {
sum(df$year == y & df$treat %in% reversed) / sum(df$year == y)
})
year_percent_indeterminate <- sapply(years, function(y) {
sum(df$year == y & df$treat %in% indeterminate) / sum(df$year == y)
})
grouped_df <- data.frame(
years = rep(years, 3),
values = c(year_percent_affirmed, year_percent_reversed, year_percent_indeterminate),
group = rep(c("Affirmed", "Reversed", "Indeterminate"), each = length(years))
)
ggplot(grouped_df, aes(x = years, y = values, color = group)) +
geom_point(size = 2) +
ggtitle(paste("Proportion of cases by result", title_suffix)) +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "green", "red")) +
theme_minimal()
}
plot_treatment_trends(data, 'circuit == 6', title_suffix = "- 6th Circuit")
plot_treatment_trends(data, 'geniss == 1', title_suffix = "- Criminal")
plot_treatment_trends(data, 'geniss == 2', title_suffix = "- Civil Rights")
plot_treatment_trends(data, 'geniss == 7', title_suffix = "- Economic activity and regulation")
plot_multiple_counts_vs_total <- function(df, filter_exprs, var_labels = NULL) {
df$year <- as.numeric(df$year)
if (is.null(var_labels)) {
var_labels <- filter_exprs
}
subset_list <- lapply(seq_along(filter_exprs), function(i) {
expr <- filter_exprs[i]
label <- var_labels[i]
df %>%
filter(!!rlang::parse_expr(expr)) %>%
count(year, name = "count") %>%
mutate(type = label)
})
subset_data <- bind_rows(subset_list)
total_data <- df %>%
count(year, name = "count") %>%
mutate(type = "Total")
combined <- bind_rows(subset_data, total_data)
ggplot(combined, aes(x = year, y = count, color = type)) +
geom_line() +
geom_point() +
ggtitle("Yearly Counts: Subsets vs Total") +
xlab("Year") +
ylab("Number of Cases") +
theme_minimal()
}
plot_multiple_counts_vs_total(
data,
filter_exprs = c("geniss == 1", "geniss == 2", "geniss == 7"),
var_labels = c("geniss 1", "geniss 2", "geniss 7")
)
plot_multiple_counts_vs_total(
data,
filter_exprs = c("treat == 1", "treat == 2"),
var_labels = c("treat 1", "treat 2")
)
filtered_data <- individual_treat_data_long %>%
filter(group == 1 | group == 8)
ggplot(filtered_data, aes(x = years, y = values, color = factor(group))) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "red")) +  # Set custom colors
theme_minimal()
filtered_data <- individual_treat_data_long %>%
filter(group == 2 | group == 3|group == 4|group == 7)
ggplot(filtered_data, aes(x = years, y = values, color = factor(group))) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "red", "green", "purple")) +  # Set custom colors
theme_minimal()
filtered_data <- individual_treat_data_long %>%
filter(group == 5 | group == 6|group == 9|group == 10)
ggplot(filtered_data, aes(x = years, y = values, color = factor(group))) +
geom_point(size = 2) +                     # Points for both sets
ggtitle("Proportion of cases by result") +
xlab("Year") +
ylab("Values") +
scale_color_manual(values = c("blue", "red", "green", "purple")) +  # Set custom colors
theme_minimal()
plot_multiple_counts_vs_total(
data,
filter_exprs = c("treat == 1", "treat == 2", "treat == 3"),
var_labels = c("treat 1", "treat 2", "treat 3")
)
on Version
plot_multiple_proportions <- function(df, filter_exprs, var_labels = NULL) {
df$year <- as.numeric(df$year)
if (is.null(var_labels)) {
var_labels <- filter_exprs
}
total_counts <- df %>%
count(year, name = "total")
proportion_list <- lapply(seq_along(filter_exprs), function(i) {
expr <- filter_exprs[i]
label <- var_labels[i]
subset_counts <- df %>%
filter(!!rlang::parse_expr(expr)) %>%
count(year, name = "subset")
merged <- left_join(subset_counts, total_counts, by = "year") %>%
mutate(proportion = subset / total, type = label)
merged %>%
select(year, proportion, type)
})
proportion_data <- bind_rows(proportion_list)
ggplot(proportion_data, aes(x = year, y = proportion, color = type)) +
geom_line() +
geom_point() +
ggtitle("Proportion of Cases per Year by Filter") +
xlab("Year") +
ylab("Proportion") +
theme_minimal()
}
plot_multiple_proportions(
data,
filter_exprs = c("treat == 1", "treat == 2", "treat == 3"),
var_labels = c("treat 1", "treat 2", "treat 3")
)
plot_categorical_by_year(data, "typeiss")
plot_categorical_by_year(data, "typeiss", proportion = FALSE)
plot_categorical_by_year(data, "typeiss", proportion = TRUE)
plot_multiple_proportions(
data,
filter_exprs = c("treat == 1", "treat == 2", "treat == 3"),
var_labels = c("treat 1", "treat 2", "treat 3")
)
plot_treatment_trends(data, 'circuit == 6', title_suffix = "- 6th Circuit")
plot_treatment_trends(data, 'typeiss == 1', title_suffix = "- Criminal and Prisoner Petitions")
plot_treatment_trends(data, 'typeiss == 1', title_suffix = "- Civil - Government")
plot_treatment_trends(data, 'typeiss == 1', title_suffix = "- Criminal and Prisoner Petitions")
plot_treatment_trends(data, 'typeiss == 1', title_suffix = "- Civil - Government")
plot_treatment_trends(data, 'typeiss == 1', title_suffix = "- Criminal and Prisoner Petitions")
plot_treatment_trends(data, 'typeiss == 2', title_suffix = "- Civil - Government")
plot_treatment_trends(data, 'typeiss == 2', title_suffix = "- Civil - private")
plot_treatment_trends(data, 'typeiss == 4', title_suffix = "- Civil - Private")
plot_treatment_trends(data, 'typeiss == 1', title_suffix = "- Criminal and Prisoner Petitions")
plot_treatment_trends(data, 'typeiss == 2', title_suffix = "- Civil - Government")
plot_treatment_trends(data, 'typeiss == 4', title_suffix = "- Civil - Private")
plot_treatment_trends(data, 'typeiss == 1', title_suffix = "- Criminal and Prisoner Petitions")
plot_treatment_trends(data, 'typeiss == 4', title_suffix = "- Civil - Private")
plot_treatment_trends(data, 'typeiss == 2', title_suffix = "- Civil - Government")
plot_categorical_by_year(data[data$treat==1,], "source", proportion = TRUE)      #Some promise here
plot_categorical_by_year(data[data$treat==1,], "source", proportion = FALSE)      #Some promise here
plot_treatment_trends(data, 'source == 1', title_suffix = "- Source - Federal District Court")
plot_treatment_trends(data, 'source == 6', title_suffix = "- Source - Federal Administrative Agency")
plot_multiple_counts_vs_total(
data,
filter_exprs = c("source == 1", "source == 6"),
var_labels = c("District Court", "FAA")
)
plot_categorical_by_year(data, "standing")
#No clear trends below
plot_categorical_by_year(data, "juris")
plot_categorical_by_year(data, "statecl")
plot_categorical_by_year(data, "standing")
plot_categorical_by_year(data, "mootness")
plot_categorical_by_year(data, "exhaust")
plot_categorical_by_year(data, "timely")
plot_categorical_by_year(data, "immunity")
plot_categorical_by_year(data, "frivol")
plot_categorical_by_year(data, "polquest")
plot_categorical_by_year(data, "oththres")
plot_categorical_by_year(data, "frivapp")
plot_categorical_by_year(data, "othappth")
plot_categorical_by_year(data, "source")
plot_categorical_by_year(data, "casetyp1")
plot_multiple_counts_vs_total(
data,
filter_exprs = c("casetyp1 == 105", "casetyp1 == 107"),
var_labels = c("Robbery", "Auto Theft")
)
plot_multiple_counts_vs_total(
data,
filter_exprs = c("geniss == 1", "geniss == 2", "geniss == 7"),
var_labels = c("geniss 1", "geniss 2", "geniss 7")
)
plot_treatment_trends(data, 'geniss == 1', title_suffix = "- Criminal")
plot_treatment_trends(data, 'geniss == 2', title_suffix = "- Civil Rights")
plot_treatment_trends(data, 'geniss == 7', title_suffix = "- Economic activity and regulation")
#No clear trends below
plot_categorical_by_year(data, "applfrom")
plot_treatment_trends(data, 'applfrom == 1', title_suffix = "- Trial")
plot_treatment_trends(data, 'applfrom == 1', title_suffix = "- Trial")
plot_treatment_trends(data, 'applfrom == 2', title_suffix = "- Injunction")
plot_treatment_trends(data, 'applfrom == 3', title_suffix = "- Summary Judgment")
plot_treatment_trends(data, 'applfrom == 5', title_suffix = "- Dismissal")
plot_treatment_trends(data, 'applfrom == 1', title_suffix = "- Trial")
plot_treatment_trends(data, 'applfrom == 2', title_suffix = "- Injunction")
plot_treatment_trends(data, 'applfrom == 3', title_suffix = "- Summary Judgment")
plot_treatment_trends(data, 'applfrom == 5', title_suffix = "- Dismissal")
